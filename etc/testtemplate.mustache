/*
executionMasks:
  jwt-role-glg: 17
glgjwtComment: 'Flag [17] includes = APP|USER'

*/
SET NOCOUNT ON;

declare @MeetingId int=0
	,@MeetingContactRelationId int = 0
	,@ReferredInd int = 0
	,@ConsultationId int = 0
	{{#PERSON_ID}},@PERSON_ID int = {{PERSON_ID}}{{/PERSON_ID}}
	,@COUNCIL_MEMBER_ID int = {{#COUNCIL_MEMBER_ID}}{{COUNCIL_MEMBER_ID}}{{/COUNCIL_MEMBER_ID}}{{^COUNCIL_MEMBER_ID}}{{REFERRAL_ID}}{{/COUNCIL_MEMBER_ID}}
	DECLARE @CreatedBy Int = 0;
	DECLARE @AppName NVARCHAR(100);

{{^PERSON_ID}}
	DECLARE @PERSON_ID INT
	SELECT @PERSON_ID = PERSON_ID FROM COUNCIL_MEMBER WHERE COUNCIL_MEMBER_ID = @COUNCIL_MEMBER_ID
{{/PERSON_ID}}
{{#Consultations}}
	 SET @CreatedBy = {{^CREATED_BY}}0{{/CREATED_BY}}{{#CREATED_BY}}{{CREATED_BY}}{{/CREATED_BY}}

	IF NOT EXISTS	(SELECT	1
				FROM	consult.CONSULTATION_PARTICIPANT 
				WHERE	PERSON_ID = @PERSON_ID
				AND		ACTIVE_IND = 1
				AND		CONSULTATION_ID = {{CONSULTATION_ID}})
	BEGIN

		set @ConsultationId = {{CONSULTATION_ID}};
		--Insert a meeting to get the meeting id
		INSERT	dbo.MEETING_TABLE	(
					CREATE_DATE
					,CREATED_BY
					,LAST_UPDATE_DATE
					,LAST_UPDATED_BY
					)
		VALUES
		(
			GETDATE()
			,@CreatedBy
			,GETDATE()
			,@CreatedBy
		)			

		--set the meeting id
		SET @MeetingId = SCOPE_IDENTITY();

		--consultation participant should have referred ind only if CM is referred for this project and project is published as OPL
		{{#ReferredInd}} 
			{{#PUBLISHED_OPL_PROJECT_IND}}
				SET @ReferredInd = {{REFERRED_IND}}
			{{/PUBLISHED_OPL_PROJECT_IND}}
		{{/ReferredInd}}
		


	    INSERT	consult.CONSULTATION_PARTICIPANT 
			(CONSULTATION_ID, PERSON_ID, NOTES, EXPERIENCE, PREPAY_IND, ACTIVE_IND, LAST_UPDATE_DATE, 
			LAST_UPDATED_BY, CONSULTATION_PARTICIPANT_STATUS_ID, ORIGINATE_RMS_IND, 
			MARKED_DOWN_RATE, MIN_PROJECT_AMOUNT, REFERRED_IND,
			PRIMARY_PHONE, BACKUP_PHONE, PREP_TIME, PREP_TIME_REASON, COUNCIL_MEMBER_COMMENT, MEETING_ID, GENERALLY_AVAILABLE_IND,
			MEETING_STATUS_ID, [START_DATE], END_DATE, PUBLISH_DATE, MY_ADVISORS, SUBMITTED_IND, 
			MAJOR_PROJECT_IND, MAJOR_PROJECT_COMMENT, PUBLISH_EXPERTMATTERS_IND, CREATE_DATE, CREATED_BY
			)
	    VALUES (@ConsultationId, @PERSON_ID, '{{{Notes}}}', NULL, NULL, 1, GETDATE(), @CreatedBy, 
			2, 0, 0, 0, @ReferredInd, NULL, NULL,0, NULL, NULL, @MeetingId, 0, 2, NULL, NULL, GETDATE(), 0, 1,
			 NULL, NULL, NULL, 	GETDATE(), @CreatedBy
			 )
		

		--SELECT @MEETING_COUNCIL_MEMBER_RELATION_ID = SCOPE_IDENTITY();

		--question
		INSERT	dbo.MEETING_QUESTION
				(ACTIVE_IND, LAST_UPDATE_DATE, LAST_UPDATED_BY, MEETING_ID, QUESTION, QUESTION_NUMBER)
		SELECT	1, GETDATE(), @CreatedBy, @MeetingId, QUESTION, QUESTION_NUMBER
		FROM	dbo.MEETING_REQUEST_QUESTION
		WHERE	MEETING_REQUEST_ID = @ConsultationId 
		 
		--note
		INSERT	dbo.MEETING_NOTE
				(MEETING_ID, MEETING_NOTE)
		SELECT	@MeetingId, NOTE 
		FROM	dbo.MEETING_REQUEST_NOTE
		WHERE	MEETING_REQUEST_ID = @ConsultationId 
		 
		--user 
		INSERT	dbo.MEETING_USER_RELATION
				(MEETING_ID, USER_ID) 
		SELECT	@MeetingId, USER_ID 
		FROM	dbo.MEETING_REQUEST_USER_RELATION
		WHERE	MEETING_REQUEST_ID = @ConsultationId 

		--ticker
		INSERT	dbo.MEETING_TICKER_RELATION
				(MEETING_ID, TICKER) 
		SELECT	@MeetingId, TICKER
		FROM	dbo.MEETING_REQUEST_TICKER_RELATION
		WHERE	MEETING_REQUEST_ID = @ConsultationId 

		--topic
		INSERT	dbo.MEETING_TOPIC_RELATION
				(MEETING_ID, TOPIC_ID) 
		SELECT	@MeetingId, TOPIC_ID
		FROM	dbo.MEETING_REQUEST_TOPIC_RELATION
		WHERE	MEETING_REQUEST_ID = @ConsultationId 

		--council
		INSERT	dbo.MEETING_COUNCIL_RELATION
				(COUNCIL_ID, MEETING_ID, PRIMARY_IND)
		SELECT	COUNCIL_ID, @MeetingId, PRIMARY_IND
		FROM	dbo.MEETING_REQUEST_COUNCIL_RELATION
		WHERE	MEETING_REQUEST_ID = @ConsultationId 
		 
		--contact
		INSERT	dbo.MEETING_CONTACT_RELATION
				(ACTIVE_IND, CONTACT_ID, CREATED_BY, CREATED_DATE, EMAIL_SENT_IND, 
				LAST_UPDATE_DATE, LAST_UPDATED_BY, MEETING_ID, MEETING_PARTICIPANT_STATUS_ID, PRIMARY_IND)
		SELECT	ACTIVE_IND, CONTACT_ID, 0, GETDATE(), @CreatedBy,
				GETDATE(), @CreatedBy, @MeetingId, 8, PRIMARY_IND
		FROM	dbo.MEETING_REQUEST_CONTACT_RELATION
		WHERE	MEETING_REQUEST_ID = @ConsultationId 

		-- Need the first MEETING_CONTACT_RELATION_ID for the OUTPUT parameter
		SELECT	TOP 1 @MeetingContactRelationId = MEETING_CONTACT_RELATION_ID
		FROM	dbo.MEETING_CONTACT_RELATION     
		WHERE	MEETING_ID = @MeetingId
		ORDER	BY MEETING_CONTACT_RELATION_ID ASC

		--Profile Questions
		INSERT	dbo.MEETING_PROFILE_QUESTION_RELATION
				(MEETING_ID, PROFILE_QUESTION_ID)
		SELECT	@MeetingId, PROFILE_QUESTION_ID
		FROM	dbo.MEETING_REQUEST_PROFILE_QUESTION_RELATION 
		WHERE	MEETING_REQUEST_ID = @ConsultationId

		-- Optional APP_NAME
		SET @AppName = {{^APP_NAME}}null{{/APP_NAME}}{{#APP_NAME}}'{{APP_NAME}}'{{/APP_NAME}}

		-- add the status for the council member(Moved this into transaction)
		INSERT	dbo.MEETING_COUNCIL_MEMBER_STATUS_RELATION
				(COUNCIL_MEMBER_ID, CREATE_DATE, CREATED_BY, MEETING_ID, MEETING_PARTICIPANT_STATUS_ID, APP_NAME )
		VALUES (@COUNCIL_MEMBER_ID, GETDATE(), @CreatedBy, @MeetingId, 2, @AppName)

	END
{{/Consultations}}
SELECT 1 AS SUCCESS;
